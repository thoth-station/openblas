#!/bin/bash -e
#
# S2I run script for the 's2i' image.
# The run script executes the server that runs your application.
#
# For more information see the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#
set -e
set -o pipefail
command_exists () { type "$1" &> /dev/null ; }
file_exists () { test -f $1 ; }
folder_exists () { test -d $1 ; }


echo "run...."

### These ENVs should be set for configure.
echo "============================================"
echo "          User defined ENVs                  "
echo "============================================"
echo "CUSTOM_BUILD="$CUSTOM_BUILD
echo "BUILD_OPTS="$BUILD_OPTS
echo "============================================"

echo "HOME="$HOME
export PATH=$HOME/bin:$PATH
echo "PATH = "$PATH
echo "which_python="`which python`
echo "link_which_python="`ls -l $(which python) | awk '{print  $9 $10 $11}'`
echo "link_bin_python="`ls -l /usr/bin/python |awk '{print  $9 $10 $11}'`
if command_exists pip ; then 
    echo "which_pip="`which pip`
    echo "which_pip_version="`pip --version `
    echo "which_pip_site="`pip --version |awk '{print $4}' `
    echo "link_which_pip="`ls -l $(which pip) | awk '{print  $9 $10 $11}'` 
fi


cd /workspace

if [[ $TEST_LOOP = "y" ]]
then
    echo "####################################"
    echo "      DEV/TEST MODE.....            "
    echo "####################################"
    echo "Starting a infinite while loop to debug in console terminal\n"
    while :
    do
        echo "Press [CTRL+C] to stop.."
        sleep 1
    done
fi


echo "============================================"
echo "          BUILD                             "
echo "============================================"
# make
if command_exists ansible-playbook ; then 
    echo "ansible-playbook command exists.";
    ansible-playbook -i ./playbooks/hosts ./playbooks/play.yaml --tags "compile_test"  --extra-vars="{install_required: 'yes', remove_existing_openblas: 'yes', target: 'PENRYN'}"; 
else 
    echo "ansible-playbook doesnt exists"; 
    exit 1;
fi

echo "============================================"
echo "          PERFORMANCE                       "
echo "============================================"
echo "Custom built OpenBLAS Performance"
export LD_LIBRARY_PATH=/opt/OpenBLAS
gcc -I/opt/OpenBLAS -L/opt/OpenBLAS -o test /usr/libexec/s2i/openblas_sgemm_test_gflops.c -lopenblas -lpthread -lgfortran -std=c99
./test

echo "============================================"
echo "RHEL OpenBLAS Performance"
export LD_LIBRARY_PATH=/usr/lib64 #overwrite the load library path
gcc -I/usr/include/openblas -L/usr/lib64 -o test /usr/libexec/s2i/openblas_sgemm_test_gflops.c -lopenblasp -lpthread -lgfortran -std=c99
./test









